# Gerador de C√≥digos

O **Gerador de C√≥digos** √© um projeto que facilita a cria√ß√£o de novos servi√ßos Java baseados em um template padr√£o. Ele inclui diversas funcionalidades prontas para uso, como conex√£o com bancos de dados, integra√ß√£o com Apache Kafka, acesso ao Azure Key Vault e muito mais. 

Este projeto √© ideal para desenvolvedores que precisam iniciar rapidamente novos projetos Java com padr√µes bem definidos e tecnologias modernas. 

## √çndice

- [Instala√ß√£o](#instala√ß√£o)
- [Uso](#uso)
- [Contribui√ß√£o](#contribui√ß√£o)
- [Licen√ßa](#licen√ßa)
- [Autores](#autores)
- [Refer√™ncias e Recursos](#refer√™ncias-e-recursos)
- [Status do Projeto](#status-do-projeto)

## Instala√ß√£o

### Requisitos:
- Java 17
- Spring Boot 3.1.11
- Docker (opcional para testes com Kafka e Postgres)
- Maven
- GitHub Personal Access Token (caso necess√°rio)

### Passos:
1. Clone o reposit√≥rio:
   ```sh
   git clone https://github.com/seu-usuario/gerador-de-codigos.git
   ```
2. Acesse o diret√≥rio do projeto:
   ```sh
   cd gerador-de-codigos
   ```
3. Configure uma pasta onde o template ser√° armazenado. Escolha um local adequado e exporte a vari√°vel `GIT_REPO_DIRECTORY`:
   ```sh
   export GIT_REPO_DIRECTORY="$HOME/gerador-template"
   mkdir -p "$GIT_REPO_DIRECTORY"
   ```
4. Configure a pasta onde os projetos gerados ser√£o salvos:
   ```sh
   export TEMPLATE_TARGET_PROJECT="$HOME/projetos-gerados"
   mkdir -p "$TEMPLATE_TARGET_PROJECT"
   ```
5. Defina as vari√°veis necess√°rias no ambiente:
   ```sh
   export GITHUBISSUER="seu-issuer"
   ```
6. Compile e instale as depend√™ncias:
   ```sh
   mvn clean install
   ```
7. Execute o projeto:
   ```sh
   mvn spring-boot:run
   ```

## Uso

O Gerador de C√≥digos permite criar novos projetos a partir de templates pr√©-definidos. Ele suporta:
- **Conex√£o com PostgreSQL**: Exemplo de configura√ß√£o no `application.yml`.
- **Apache Kafka**: Exemplo de produ√ß√£o e consumo de mensagens.
- **Azure Key Vault**: Integra√ß√£o para gest√£o de segredos e credenciais.

### Criando um projeto com template
Para gerar um novo projeto baseado em um template, envie um JSON com as configura√ß√µes desejadas via API:
```sh
curl -X POST "http://localhost:8080/api/gerar" -H "Content-Type: application/json" -d '{
    "owner": "Bradesco-Core",
    "dispatchId": "create-67179d476bdfbf042c48604b",
    "language": "java",
    "projectname": "brai-srv-piloto-07102024-1020",
    "groupId": "br.com.bradesco.engenharia",
    "costcenter": "brai",
    "valuestream": "brainc",
    "namespace": "brainc-qjmfss",
    "clustersName": "adqemp",
    "apiRepo": "https://github.com/Bradesco-Core/pcac-iac-azu-autditi-gitops-piloto-11120-07022025.git",
    "keyVaultName": null,
    "templates": ["SqlServerTemplate"],
    "infraConfig": {
        "configMap": {
            "mssql": {
                "host": "mssqlazudvbraqjmfss001.database.windows.net",
                "port": "1433",
                "server": "sqlserver",
                "database": "sqlqjmfss001",
                "user": "userappqjmfss001"
            }
        },
        "keyVault": {
            "mssql": {
                "name": "kvazudvbraqjmfss001",
                "secrets": ["userappmssqlazudvbraqjmfss001"]
            }
        }
    }
}'
```

## Contribui√ß√£o

1. Fork o reposit√≥rio
2. Crie uma branch para a funcionalidade:
   ```sh
   git checkout -b minha-feature
   ```
3. Implemente e commit suas mudan√ßas:
   ```sh
   git commit -m "Adicionando nova funcionalidade"
   ```
4. Envie para o reposit√≥rio remoto:
   ```sh
   git push origin minha-feature
   ```
5. Abra um Pull Request

## Licen√ßa

Este projeto est√° sob a licen√ßa MIT. Veja o arquivo [LICENSE](LICENSE) para mais detalhes.

## Autores

- [Seu Nome](https://github.com/seu-usuario)

## Refer√™ncias e Recursos

- [Documenta√ß√£o do Spring Boot](https://spring.io/projects/spring-boot)
- [Apache Kafka](https://kafka.apache.org/documentation/)
- [Azure Key Vault](https://learn.microsoft.com/en-us/azure/key-vault/)
- [PostgreSQL](https://www.postgresql.org/docs/)

## Status do Projeto

üöÄ Em desenvolvimento - Vers√£o 1.0 em progresso com funcionalidades sendo adicionadas regularmente.

