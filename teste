// ...colar CustomWorkflowRunsTable e tipo CustomWorkflowRun aqui...

export const CiCdAplicacaoTab = () => {
  // useEffect para fetch dos dados, estados, etc.
  const [runs, setRuns] = useState<CustomWorkflowRun[]>([]);
  const [loading, setLoading] = useState(true);
  const [page, setPage] = useState(0);
  const [pageSize, setPageSize] = useState(5);

  useEffect(() => {
    fetch(`/api/ci/list-runs?repo=org/repo`)
      .then(res => res.json())
      .then(data => {
        const parsed: CustomWorkflowRun[] = data.workflow_runs.map(run => ({
          id: run.id,
          workflowName: run.name,
          status: run.status,
          conclusion: run.conclusion,
          html_url: run.html_url,
          event: run.event,
          statusDate: run.created_at,
          statusAge: '2h', // pode calcular depois
          message: run.head_commit?.message,
          branchName: run.head_branch,
          commitHash: run.head_sha?.slice(0, 7),
        }));
        setRuns(parsed);
        setLoading(false);
      });
  }, []);

  return (
    <CustomWorkflowRunsTable
      runs={runs}
      loading={loading}
      retry={() => window.location.reload()}
      projectName="org/repo"
      page={page}
      onChangePage={setPage}
      total={runs.length}
      pageSize={pageSize}
      onChangePageSize={setPageSize}
    />
  );
};
