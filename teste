// src/components/ciCdAplicacaoTab/WorkflowDetailsPage.tsx

import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import { useEntity } from '@backstage/plugin-catalog-react';
import { CircularProgress, Typography, Box } from '@material-ui/core';
import { WorkflowDetailsLayout, WorkflowJob } from './WorkflowDetailsLayout';

export const WorkflowDetailsPage = () => {
  const { id } = useParams<{ id: string }>();
  const { entity } = useEntity();
  const repo = entity?.metadata?.annotations?.['github.com/project-slug'] ?? '';
  const [jobs, setJobs] = useState<WorkflowJob[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchDetails = async () => {
      try {
        const jobsUrl = `https://api.github.com/repos/${repo}/actions/runs/${id}/jobs`;
        const res = await fetch(jobsUrl, {
          headers: {
            Authorization: 'token ghu_32HzuE7c9MQCCqQgoFWa2Dix8OUns21XlCj2',
            Accept: 'application/vnd.github.v3+json',
          },
        });
        const data = await res.json();

        const parsedJobs: WorkflowJob[] = data.jobs.map((job: any) => ({
          id: job.id,
          name: job.name,
          status: job.status,
          conclusion: job.conclusion,
          started_at: job.started_at,
          completed_at: job.completed_at,
          steps: job.steps?.map((step: any, idx: number) => ({
            name: step.name,
            status: step.status,
            conclusion: step.conclusion,
            number: idx + 1,
          })),
        }));

        setJobs(parsedJobs);
        setLoading(false);
      } catch (e) {
        console.error('Erro ao buscar detalhes do workflow:', e);
        setLoading(false);
      }
    };

    fetchDetails();
  }, [id, repo]);

  if (loading) return <CircularProgress />;

  return (
    <Box>
      <Typography variant="h4" gutterBottom>
        Detalhes da Execução #{id}
      </Typography>
      <WorkflowDetailsLayout
        jobs={jobs}
        repoUrl={`https://github.com/${repo}/actions/runs/${id}`}
      />
    </Box>
  );
};
