public ResponseEntity<String> testConstraintViolation() {
        // Simular uma violação de restrição
        Validator validator = Validation.buildDefaultValidatorFactory().getValidator();
        TestRequest testRequest = new TestRequest(); // name é nulo ou vazio, violando @NotBlank
        Set<ConstraintViolation<TestRequest>> violations = validator.validate(testRequest);

        if (!violations.isEmpty()) {
            ConstraintViolation<TestRequest> violation = violations.iterator().next();
            // Criar a exceção ConstraintViolationException
            throw new ConstraintViolationException(Collections.singleton(violation));
        }

        return ResponseEntity.ok("Valid request");
    }

    public static class TestRequest {
        @NotBlank
        private String name;

        // getters and setters
        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }
    }
