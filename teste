private void copyDirectoryFromClasspath(String resourcePath, Path targetPath) throws IOException {
    ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();
    Resource[] resources = resolver.getResources("classpath:template/**");

    for (Resource resource : resources) {
        if (resource.isReadable()) {
            String resourcePathInJar = resource.getURI().toString();
            logger.info("Encontrado recurso: {}", resourcePathInJar);

            if (resource.isFile()) {
                // Ã‰ um arquivo
                Path relativePath = Paths.get("template").relativize(Paths.get(resource.getURI()));
                Path targetFile = targetPath.resolve(relativePath.toString());
                Files.createDirectories(targetFile.getParent());
                try (InputStream is = resource.getInputStream()) {
                    Files.copy(is, targetFile, StandardCopyOption.REPLACE_EXISTING);
                }
            } else if (resource instanceof org.springframework.core.io.UrlResource && resource.getURL().getProtocol().equals("jar")) {
                // Tratamento para arquivos dentro do JAR
                String path = resource.getURL().getPath();
                String relativePathStr = path.substring(path.indexOf("!/") + 2);
                Path relativePath = Paths.get(relativePathStr).subpath(1, Paths.get(relativePathStr).getNameCount());
                Path targetDir = targetPath.resolve(relativePath);
                Files.createDirectories(targetDir);
            }
        }
    }
}
